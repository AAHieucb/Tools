# Docker window => bỏ k dùng
WSL2 là phiên bản giống ubuntu nhất của window hoàn thiện hơn HyperV.
Dùng WSL2 phải enable virtualization. Dù máy dùng bios mode UEFI hay legacy đều phải vào setup bios của máy tính khi khởi động để enable virtualization technology. 
Full cài docker - wsl2: https://xuanthulab.net/cai-dat-va-chay-docker-trong-wsl2-windows.html
Cài wsl2 + các lệnh wsl thg dùng: https://www.c-sharpcorner.com/article/how-to-install-windows-subsystem-for-linux-wsl2-on-windows-11
Mở terminal ở bất cứ thư mục nào và gõ wsl sẽ mở wsl ở thư mục đó. 

-> Setup docker wsl2 cho máy win10
Kích hoạt chế độ hyper-v trên máy tính: chạy powershell quyền admin -> Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
Enable virtualization trong BIOS nếu chưa có
Docker có 2 bản window container và linux container. Chỉ dùng linux container với wsl2 thay vì window container.

Setup wsl2: https://xuanthulab.net/cai-dat-va-chay-docker-trong-wsl2-windows.html
Uninstall wsl2 với: https://pureinfotech.com/remove-linux-distro-wsl/



# So sánh docker với VM
- Chạy Hypervisor trên HostOS (phần mềm quản lý nhiều máy ảo) -> trên Hypervisor sẽ chạy nhiều máy ảo khác nhau, mỗi máy ảo là 1 hệ điều hành riêng. Nó làm bằng cách phân chia CPU ra làm nhiều phần cho từng máy ảo và càng nhiều máy ảo sẽ càng đốt CPU (chia ở cấp độ phần cứng). Mỗi máy ảo có 1 hệ điều hành khác nhau và trong mỗi máy ảo là 1 môi trường đều có đầy đủ thư viện các thứ để chạy ứng dụng mà ta muốn chạy trên máy ảo đó.
- Docker Engine chạy trên HostOS và trên nó sẽ có nhiều container. Chúng dùng chung hđh với HostOS, chỉ là cài thêm cac bins/libs để giống như ứng dụng chạy trên hđh ảo, nên tốc độ nhanh hơn và có thể chia sẻ tài nguyên cho nhau nhưng vẫn như dùng OS đó thật.
Phần cứng - HostOS - Docker running có nhiều container - các ứng dụng trên Container




# Other
-> Docker giúp giải quyết xung đột phiên bản, tránh trường hợp ứng dụng chỉ chạy trên máy của tôi, máy khác thì lỗi. Cài docker trên máy production dùng ok.
VD dự án có 2 người làm, 1 người dùng MacOS chạy nodejs v12, 1 người dùng Window chạy nodejs v14. Khi người này chạy ok, người kia dùng lại có lỗi do xung đột => Ta dùng docker làm môi trường đồng nhất cho cả 2 và sử dụng image node:14.x, người nào vào dự án chỉ cần chạy container lên là xong.
VD: chạy webserver trên máy ta, bh chuyển lên EC2, thì phải vào EC2 cài docker qua cli, pull dự án từ git về có dockerfile rồi chạy dự án trên EC2 bằng docker bth.
Docker có 2 phiên bản CE cho nhóm nhỏ và EE cho doanh nghiệp

